package com.niejinkun.springcloud.demo.mapper;

import com.niejinkun.springcloud.demo.model.ProductBasic;
import com.niejinkun.springcloud.demo.model.ProductBasicExample;
import java.math.BigDecimal;
import java.util.Date;
import java.util.List;
import org.apache.ibatis.annotations.Arg;
import org.apache.ibatis.annotations.ConstructorArgs;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface ProductBasicMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product_basic
     *
     * @mbg.generated
     */
    @SelectProvider(type=ProductBasicSqlProvider.class, method="countByExample")
    long countByExample(ProductBasicExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product_basic
     *
     * @mbg.generated
     */
    @DeleteProvider(type=ProductBasicSqlProvider.class, method="deleteByExample")
    int deleteByExample(ProductBasicExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product_basic
     *
     * @mbg.generated
     */
    @Delete({
        "delete from product_basic",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product_basic
     *
     * @mbg.generated
     */
    @Insert({
        "insert into product_basic (id, code, ",
        "type, status, rate_type, ",
        "rate, rate_max, rate_min, ",
        "float_rate, investment_term, ",
        "investment_min_money, investment_max_money, ",
        "total_money, left_money, ",
        "people, img, title, ",
        "foot_name, channel, ",
        "open_time, vip_open_time, ",
        "rate_time, open_status, ",
        "update_at, create_at)",
        "values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, ",
        "#{type,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, #{rateType,jdbcType=TINYINT}, ",
        "#{rate,jdbcType=DECIMAL}, #{rateMax,jdbcType=DECIMAL}, #{rateMin,jdbcType=DECIMAL}, ",
        "#{floatRate,jdbcType=DECIMAL}, #{investmentTerm,jdbcType=DECIMAL}, ",
        "#{investmentMinMoney,jdbcType=DECIMAL}, #{investmentMaxMoney,jdbcType=DECIMAL}, ",
        "#{totalMoney,jdbcType=DECIMAL}, #{leftMoney,jdbcType=DECIMAL}, ",
        "#{people,jdbcType=INTEGER}, #{img,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, ",
        "#{footName,jdbcType=VARCHAR}, #{channel,jdbcType=SMALLINT}, ",
        "#{openTime,jdbcType=INTEGER}, #{vipOpenTime,jdbcType=INTEGER}, ",
        "#{rateTime,jdbcType=INTEGER}, #{openStatus,jdbcType=TINYINT}, ",
        "#{updateAt,jdbcType=TIMESTAMP}, #{createAt,jdbcType=TIMESTAMP})"
    })
    int insert(ProductBasic record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product_basic
     *
     * @mbg.generated
     */
    @InsertProvider(type=ProductBasicSqlProvider.class, method="insertSelective")
    int insertSelective(ProductBasic record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product_basic
     *
     * @mbg.generated
     */
    @SelectProvider(type=ProductBasicSqlProvider.class, method="selectByExample")
    @ConstructorArgs({
        @Arg(column="id", javaType=Integer.class, jdbcType=JdbcType.INTEGER, id=true),
        @Arg(column="code", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="type", javaType=Byte.class, jdbcType=JdbcType.TINYINT),
        @Arg(column="status", javaType=Byte.class, jdbcType=JdbcType.TINYINT),
        @Arg(column="rate_type", javaType=Byte.class, jdbcType=JdbcType.TINYINT),
        @Arg(column="rate", javaType=Long.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="rate_max", javaType=Long.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="rate_min", javaType=Long.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="float_rate", javaType=Long.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="investment_term", javaType=BigDecimal.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="investment_min_money", javaType=BigDecimal.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="investment_max_money", javaType=BigDecimal.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="total_money", javaType=BigDecimal.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="left_money", javaType=BigDecimal.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="people", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="img", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="title", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="foot_name", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="channel", javaType=Short.class, jdbcType=JdbcType.SMALLINT),
        @Arg(column="open_time", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="vip_open_time", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="rate_time", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="open_status", javaType=Byte.class, jdbcType=JdbcType.TINYINT),
        @Arg(column="update_at", javaType=Date.class, jdbcType=JdbcType.TIMESTAMP),
        @Arg(column="create_at", javaType=Date.class, jdbcType=JdbcType.TIMESTAMP)
    })
    List<ProductBasic> selectByExample(ProductBasicExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product_basic
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, code, type, status, rate_type, rate, rate_max, rate_min, float_rate, investment_term, ",
        "investment_min_money, investment_max_money, total_money, left_money, people, ",
        "img, title, foot_name, channel, open_time, vip_open_time, rate_time, open_status, ",
        "update_at, create_at",
        "from product_basic",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @ConstructorArgs({
        @Arg(column="id", javaType=Integer.class, jdbcType=JdbcType.INTEGER, id=true),
        @Arg(column="code", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="type", javaType=Byte.class, jdbcType=JdbcType.TINYINT),
        @Arg(column="status", javaType=Byte.class, jdbcType=JdbcType.TINYINT),
        @Arg(column="rate_type", javaType=Byte.class, jdbcType=JdbcType.TINYINT),
        @Arg(column="rate", javaType=Long.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="rate_max", javaType=Long.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="rate_min", javaType=Long.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="float_rate", javaType=Long.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="investment_term", javaType=BigDecimal.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="investment_min_money", javaType=BigDecimal.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="investment_max_money", javaType=BigDecimal.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="total_money", javaType=BigDecimal.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="left_money", javaType=BigDecimal.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="people", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="img", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="title", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="foot_name", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="channel", javaType=Short.class, jdbcType=JdbcType.SMALLINT),
        @Arg(column="open_time", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="vip_open_time", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="rate_time", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="open_status", javaType=Byte.class, jdbcType=JdbcType.TINYINT),
        @Arg(column="update_at", javaType=Date.class, jdbcType=JdbcType.TIMESTAMP),
        @Arg(column="create_at", javaType=Date.class, jdbcType=JdbcType.TIMESTAMP)
    })
    ProductBasic selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product_basic
     *
     * @mbg.generated
     */
    @UpdateProvider(type=ProductBasicSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") ProductBasic record, @Param("example") ProductBasicExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product_basic
     *
     * @mbg.generated
     */
    @UpdateProvider(type=ProductBasicSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") ProductBasic record, @Param("example") ProductBasicExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product_basic
     *
     * @mbg.generated
     */
    @UpdateProvider(type=ProductBasicSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(ProductBasic record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product_basic
     *
     * @mbg.generated
     */
    @Update({
        "update product_basic",
        "set code = #{code,jdbcType=VARCHAR},",
          "type = #{type,jdbcType=TINYINT},",
          "status = #{status,jdbcType=TINYINT},",
          "rate_type = #{rateType,jdbcType=TINYINT},",
          "rate = #{rate,jdbcType=DECIMAL},",
          "rate_max = #{rateMax,jdbcType=DECIMAL},",
          "rate_min = #{rateMin,jdbcType=DECIMAL},",
          "float_rate = #{floatRate,jdbcType=DECIMAL},",
          "investment_term = #{investmentTerm,jdbcType=DECIMAL},",
          "investment_min_money = #{investmentMinMoney,jdbcType=DECIMAL},",
          "investment_max_money = #{investmentMaxMoney,jdbcType=DECIMAL},",
          "total_money = #{totalMoney,jdbcType=DECIMAL},",
          "left_money = #{leftMoney,jdbcType=DECIMAL},",
          "people = #{people,jdbcType=INTEGER},",
          "img = #{img,jdbcType=VARCHAR},",
          "title = #{title,jdbcType=VARCHAR},",
          "foot_name = #{footName,jdbcType=VARCHAR},",
          "channel = #{channel,jdbcType=SMALLINT},",
          "open_time = #{openTime,jdbcType=INTEGER},",
          "vip_open_time = #{vipOpenTime,jdbcType=INTEGER},",
          "rate_time = #{rateTime,jdbcType=INTEGER},",
          "open_status = #{openStatus,jdbcType=TINYINT},",
          "update_at = #{updateAt,jdbcType=TIMESTAMP},",
          "create_at = #{createAt,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(ProductBasic record);
}